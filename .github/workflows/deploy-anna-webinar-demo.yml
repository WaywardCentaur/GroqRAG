name: Deploy Anna Webinar Demo to GitHub Pages

on:
  push:
    branches:
      - main
    paths:
      - 'anna-webinar-demo/**'
  workflow_dispatch:

# Explicit permissions for GitHub Pages deployment
permissions:
  contents: read
  pages: write
  id-token: write
  actions: read
  deployments: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    # Set environment variables at job level
    env:
      CI: false
      GENERATE_SOURCEMAP: false
      DISABLE_ESLINT_PLUGIN: true

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1  # Minimal fetch for better reliability

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: anna-webinar-demo/package-lock.json

      - name: Verify directory structure and prerequisites
        run: |
          echo "=== Git and Repository Verification ==="
          echo "Current working directory: $(pwd)"
          echo "Git workspace: ${{ github.workspace }}"
          echo "Repository: ${{ github.repository }}"
          echo "Git status:"
          git status --porcelain || echo "Git status failed"
          echo "Git remote:"
          git remote -v || echo "No git remotes found"
          
          echo -e "\n=== Directory Structure Verification ==="
          echo "Repository structure:"
          ls -la
          
          echo -e "\n=== Anna Webinar Demo Directory ==="
          ls -la anna-webinar-demo/
          
          echo -e "\n=== Package Files Check ==="
          test -f anna-webinar-demo/package.json && echo "‚úÖ package.json found" || (echo "‚ùå package.json missing" && exit 1)
          test -f anna-webinar-demo/package-lock.json && echo "‚úÖ package-lock.json found" || (echo "‚ùå package-lock.json missing" && exit 1)
          
          echo -e "\n=== Build Script Verification ==="
          grep -q '"build"' anna-webinar-demo/package.json && echo "‚úÖ Build script found in package.json" || (echo "‚ùå Build script missing" && exit 1)
          
          echo -e "\n=== Environment Info ==="
          echo "Node version: $(node --version)"
          echo "NPM version: $(npm --version)"
          echo "Working directory: $(pwd)"

      - name: Install dependencies
        working-directory: anna-webinar-demo
        run: |
          echo "=== Installing Dependencies ==="
          echo "Installing dependencies with npm ci..."
          npm ci --no-optional --no-audit --progress=false
          
          echo -e "\n=== Dependency Installation Verification ==="
          test -d node_modules && echo "‚úÖ node_modules directory created" || (echo "‚ùå node_modules missing" && exit 1)
          echo "Dependencies installed successfully"

      - name: Build React app
        working-directory: anna-webinar-demo
        run: |
          echo "=== Building React Application ==="
          echo "Starting build process..."
          npm run build
          
          echo -e "\n=== Build Success ==="
          echo "React app build completed successfully"

      - name: Verify build output
        run: |
          echo "=== Build Output Verification ==="
          
          # Check if build directory exists
          if [ -d "anna-webinar-demo/build" ]; then
            echo "‚úÖ Build directory exists"
          else
            echo "‚ùå Build directory missing - build failed"
            exit 1
          fi
          
          # Check for essential files
          if [ -f "anna-webinar-demo/build/index.html" ]; then
            echo "‚úÖ index.html found"
          else
            echo "‚ùå index.html missing - build incomplete"
            exit 1
          fi
          
          # Show build directory structure
          echo -e "\n=== Build Directory Contents ==="
          ls -la anna-webinar-demo/build/
          
          # Check for static assets
          if [ -d "anna-webinar-demo/build/static" ]; then
            echo "‚úÖ Static assets directory found"
            echo "Static assets:"
            find anna-webinar-demo/build/static -type f | head -5
          else
            echo "‚ö†Ô∏è  Static assets directory not found (might be okay)"
          fi
          
          echo -e "\n=== Build Output Ready for Deployment ==="

      - name: Configure Git for deployment
        run: |
          echo "=== Git Configuration ==="
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git config --global init.defaultBranch main
          echo "‚úÖ Git configured successfully"

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./anna-webinar-demo/build
          destination_dir: anna-webinar-demo
          # Configure git settings
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          # Use a simple commit message
          commit_message: 'Deploy Anna Webinar Demo'
          # Enable debug mode
          enable_jekyll: false
          # Don't use force orphan to avoid git issues
          force_orphan: false

      - name: Deployment verification
        run: |
          echo "=== Deployment Complete ==="
          echo "‚úÖ Anna Webinar Demo deployed successfully!"
          echo "üåê Your app will be available at: https://waywardcentaur.github.io/GroqRAG/anna-webinar-demo/"
          echo "üìù Note: It may take a few minutes for changes to appear on GitHub Pages"
          echo "üîß Repository: ${{ github.repository }}"
          echo "üìä Commit: ${{ github.sha }}"
